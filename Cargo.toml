[package]
name = "delimit_axiom"
version = "0.1.0"
authors = ["Julian Erickson <julian@rothlabs.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde = { version = "1.0", features = ["derive"] }
wasm-bindgen = "0.2.9"
serde-wasm-bindgen = "0.6.3"
js-sys = "0.3"
glam = { version = "0.25", default-features = false, features = ["libm"] }
lyon = { version = "1.0" }
const_format = "0.2.32"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dependencies.web-sys]
version = "0.3"
features = [
  'Document', 
  'Window', 
  'HtmlCanvasElement' ,
  'WebGlRenderingContext', 
  'WebGl2RenderingContext', 
  'WebGlProgram', 
  'WebGlShader', 
  'WebGlBuffer', 
  'WebGlFramebuffer', 
  'WebGlVertexArrayObject',
  'WebGlUniformLocation',
  'WebGlTexture'
]

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"



#euclid = { version = "0.21" }
#rayon = "1.8"
# rand = { version = "0.8.5", default-features = false, features = ["std_rng"] }
# rand_chacha = "0.3.0"
# rand = {version = "0.8.5", getrandom = false}
# gloo-utils = { version = "0.1", features = ["serde"] }
# js-sys = "0.3.67"

